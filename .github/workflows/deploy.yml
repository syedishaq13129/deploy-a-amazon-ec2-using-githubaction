name: Deploy Release to CodeDeploy

on:
  release:
    types: [created]

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v2
        with:
          ref: ${{ github.event.release.tag_name }}

      - name: Install AWS CLI
        run: |
          sudo apt-get update
          sudo apt-get install -y awscli

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ap-south-1 

      - name: Download Release ZIP
        run: |
          echo "Downloading release ZIP..."
          curl -L -o ${{ github.event.release.tag_name }}.zip https://github.com/${{ github.repository }}/archive/refs/tags/${{ github.event.release.tag_name }}.zip
          echo "Download complete."

      - name: Upload Release ZIP to S3
        run: |
          echo "Uploading release ZIP to S3..."
          aws s3 cp ${{ github.event.release.tag_name }}.zip s3://codedeployanil0605/
          echo "Upload complete."

      - name: Trigger CodeDeploy Deployment
        env:
          RELEASE_TAG_NAME: ${{ github.event.release.tag_name }}
        run: |
          echo "Triggering CodeDeploy deployment..."
          aws deploy create-deployment \
            --application-name demo-cd \
            --deployment-group-name demo-dg \
            --description "GitHub Release Deployment" \
            --s3-location bucket=codedeployanil0605,key=${{ github.event.release.tag_name }}.zip,bundleType=zip
          echo "Deployment triggered."

      - name: Delete Old Files
        run: |
          # Set the name of the S3 bucket
          BUCKET_NAME=codedeployanil0605
          # Set the prefix for the files in the bucket
          PREFIX=syed
          # Get the list of files in the bucket
          FILES=$(aws s3 ls s3://$BUCKET_NAME/$PREFIX --recursive --human-readable | awk '{print $4}')
          # Get the number of files in the bucket
          NUM_FILES=$(aws s3 ls s3://$BUCKET_NAME/$PREFIX --recursive | wc -l)
          # If there are more than 5 files in the bucket
          if [ $NUM_FILES -gt 5 ]; then
            # Remove the oldest files
            for i in $(seq 1 $((NUM_FILES-5))); do
              FILE=$(echo $FILES | head -n $i | tail -n 1)
              aws s3 rm s3://$BUCKET_NAME/$FILE
              FILES=$(echo $FILES | sed -e "s/$FILE//")
              NUM_FILES=$((NUM_FILES-1))
            done
          fi
